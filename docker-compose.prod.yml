services:
  api_prod:
    container_name: nestjs-backend-prod
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build production stage from our dockerfile
      target: production
    volumes:
      - .:/usr/src/app
    env_file:
      - .env.prod
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_prod:5432/${POSTGRES_DB}?schema=public
    # Run a command against the production stage of the image
    command: yarn start:prod
    ports:
      - 3000:3000
    depends_on:
      - postgres_prod
    networks:
      - nestjs_prod
  postgres_prod:
    container_name: nestjs-postgres-prod
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - nestjs-postgres-prod:/var/lib/postgresql/data
    networks:
      - nestjs_prod

volumes:
  nestjs-postgres-prod:
    external: false

networks:
  nestjs_prod:
    external: false
